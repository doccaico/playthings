/* Generated by the Nim Compiler v1.4.4 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI1188044 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1901748 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1194653 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194633 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194637 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194649 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2367015 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI2367202 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1194408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194728 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1188015 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI1194723 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1194617 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194619 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194641 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1188013 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1188046 = {size: 0,kind: 32,base: null,node: null,finalizer: null};
var NTI11643031 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
NTI11643031.base = NTI1188046;
var NNI1194641 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194641.node = NNI1194641;
var NNI1194619 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194619.node = NNI1194619;
NTI1194723.base = NTI1194617;
NTI1194728.base = NTI1194617;
var NNI1194617 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI1194723, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1188015, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI1188013, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI1188013, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI1194728, name: "up", sons: null}]};
NTI1194617.node = NNI1194617;
var NNI1194408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194408.node = NNI1194408;
NTI1194617.base = NTI1194408;
NTI1194619.base = NTI1194617;
NTI1194641.base = NTI1194619;
var NNI2367202 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a0", len: 0, typ: NTI2367015, name: "a0", sons: null}, 
{kind: 1, offset: "a1", len: 0, typ: NTI2367015, name: "a1", sons: null}]};
NTI2367202.node = NNI2367202;
var NNI1194649 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194649.node = NNI1194649;
NTI1194649.base = NTI1194619;
var NNI1194637 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194637.node = NNI1194637;
var NNI1194633 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194633.node = NNI1194633;
NTI1194633.base = NTI1194619;
NTI1194637.base = NTI1194633;
var NNI1194653 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194653.node = NNI1194653;
NTI1194653.base = NTI1194619;
var NNI1901748 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1188044, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1188044, name: "b", sons: null}]};
NTI1901748.node = NNI1901748;
function arrayConstr(len_1480067, value_1480068, typ_1480069) {
        var result = new Array(len_1480067);
    for (var i = 0; i < len_1480067; ++i) result[i] = nimCopy(null, value_1480068, typ_1480069);
    return result;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_1470023, src_1470024, ti_1470025) {
  var result_1475219 = null;

    switch (ti_1470025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_1465401(ti_1470025))) {
      result_1475219 = src_1470024;
      }
      else {
        result_1475219 = [src_1470024[0], src_1470024[1]];
      }
      
      break;
    case 19:
            if (dest_1470023 === null || dest_1470023 === undefined) {
        dest_1470023 = {};
      }
      else {
        for (var key in dest_1470023) { delete dest_1470023[key]; }
      }
      for (var key in src_1470024) { dest_1470023[key] = src_1470024[key]; }
      result_1475219 = dest_1470023;
    
      break;
    case 18:
    case 17:
      if (!((ti_1470025.base == null))) {
      result_1475219 = nimCopy(dest_1470023, src_1470024, ti_1470025.base);
      }
      else {
      if ((ti_1470025.kind == 17)) {
      result_1475219 = (dest_1470023 === null || dest_1470023 === undefined) ? {m_type: ti_1470025} : dest_1470023;
      }
      else {
        result_1475219 = (dest_1470023 === null || dest_1470023 === undefined) ? {} : dest_1470023;
      }
      }
      nimCopyAux(result_1475219, src_1470024, ti_1470025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_1470024 === null) {
        result_1475219 = null;
      }
      else {
        if (dest_1470023 === null || dest_1470023 === undefined) {
          dest_1470023 = new Array(src_1470024.length);
        }
        else {
          dest_1470023.length = src_1470024.length;
        }
        result_1475219 = dest_1470023;
        for (var i = 0; i < src_1470024.length; ++i) {
          result_1475219[i] = nimCopy(result_1475219[i], src_1470024[i], ti_1470025.base);
        }
      }
    
      break;
    case 28:
            if (src_1470024 !== null) {
        result_1475219 = src_1470024.slice(0);
      }
    
      break;
    default: 
      result_1475219 = src_1470024;
      break;
    }

  return result_1475219;

}
function makeNimstrLit(c_1455062) {
      var ln = c_1455062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_1455062.charCodeAt(i);
  }
  return result;
  

  
}
function toJSStr(s_1455096) {
                    var Tmp5;
            var Tmp7;

  var result_1455097 = null;

    var res_1455170 = newSeq_1455128((s_1455096).length);
    var i_1455172 = 0;
    var j_1455174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_1455172 < (s_1455096).length)) break L2;
          var c_1455175 = s_1455096[i_1455172];
          if ((c_1455175 < 128)) {
          res_1455170[j_1455174] = String.fromCharCode(c_1455175);
          i_1455172 += 1;
          }
          else {
            var helper_1455198 = newSeq_1455128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_1455199 = c_1455175.toString(16);
                  if ((((code_1455199) == null ? 0 : (code_1455199).length) == 1)) {
                  helper_1455198.push("%0");;
                  }
                  else {
                  helper_1455198.push("%");;
                  }
                  
                  helper_1455198.push(code_1455199);;
                  i_1455172 += 1;
                    if (((s_1455096).length <= i_1455172)) Tmp5 = true; else {                      Tmp5 = (s_1455096[i_1455172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_1455175 = s_1455096[i_1455172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_1455170[j_1455174] = decodeURIComponent(helper_1455198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_1455170[j_1455174] = helper_1455198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_1455174 += 1;
        }
    } while(false);
    if (res_1455170.length < j_1455174) { for (var i=res_1455170.length;i<j_1455174;++i) res_1455170.push(null); }
               else { res_1455170.length = j_1455174; };
    result_1455097 = res_1455170.join("");

  return result_1455097;

}
function raiseException(e_1420218, ename_1420219) {
    e_1420218.name = ename_1420219;
    if ((excHandler == 0)) {
    unhandledException(e_1420218);
    }
    
    throw e_1420218;

  
}
function cstrToNimstr(c_1455079) {
      var ln = c_1455079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_1455079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_1455079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function chckIndx(i_1480086, a_1480087, b_1480088) {
      var Tmp1;

  var result_1480089 = 0;

  BeforeRet: do {
      if (!(a_1480087 <= i_1480086)) Tmp1 = false; else {        Tmp1 = (i_1480086 <= b_1480088);      }    if (Tmp1) {
    result_1480089 = i_1480086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_1480086, a_1480087, b_1480088);
    }
    
  } while (false);

  return result_1480089;

}
function addInt(a_1460419, b_1460420) {
        var result = a_1460419 + b_1460420;
    checkOverflowInt(result);
    return result;
  

  
}
function chckRange(i_1485016, a_1485017, b_1485018) {
      var Tmp1;

  var result_1485019 = 0;

  BeforeRet: do {
      if (!(a_1485017 <= i_1485016)) Tmp1 = false; else {        Tmp1 = (i_1485016 <= b_1485018);      }    if (Tmp1) {
    result_1485019 = i_1485016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_1485019;

}
function subInt(a_1460437, b_1460438) {
        var result = a_1460437 - b_1460438;
    checkOverflowInt(result);
    return result;
  

  
}
function mulInt(a_1460455, b_1460456) {
        var result = a_1460455 * b_1460456;
    checkOverflowInt(result);
    return result;
  

  
}
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var state_2367205 = [{a0: 1773455756, a1: 4275166512}];
if (globalThis.utcInstance_11070231 === undefined) {
  utcInstance_11070231 = [null];
}
if (globalThis.localInstance_11070232 === undefined) {
  localInstance_11070232 = [null];
}
function isFatPointer_1465401(ti_1465403) {
  var result_1465404 = false;

  BeforeRet: do {
    result_1465404 = !((ConstSet1[ti_1465403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_1465404;

}
function nimCopyAux(dest_1470028, src_1470029, n_1470031) {
    switch (n_1470031.kind) {
    case 0:
      break;
    case 1:
            dest_1470028[n_1470031.offset] = nimCopy(dest_1470028[n_1470031.offset], src_1470029[n_1470031.offset], n_1470031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_1470031.sons.length; i++) {
      nimCopyAux(dest_1470028, src_1470029, n_1470031.sons[i]);
    }
    
      break;
    case 3:
            dest_1470028[n_1470031.offset] = nimCopy(dest_1470028[n_1470031.offset], src_1470029[n_1470031.offset], n_1470031.typ);
      for (var i = 0; i < n_1470031.sons.length; ++i) {
        nimCopyAux(dest_1470028, src_1470029, n_1470031.sons[i][1]);
      }
    
      break;
    }

  
}
var board_11643038 = [arrayConstr(52, new Int8Array(52), NTI11643031)];
var prevTimestamp_11643039 = [0.0];
function toFloat_1216659(i_1216661) {
  var result_1216662 = 0.0;

    result_1216662 = i_1216661;

  return result_1216662;

}
function HEX2F_1555648(x_1555650, y_1555651) {
  var result_1555652 = 0.0;

    result_1555652 = (toFloat_1216659(x_1555650) / toFloat_1216659(y_1555651));

  return result_1555652;

}
function epochTime_11640141() {
  var result_11640143 = 0.0;

    result_11640143 = HEX2F_1555648(new Date().getTime(), 1000);

  return result_11640143;

}
function add_1357211(x_1357214, x_1357214_Idx, y_1357215) {
          if (x_1357214[x_1357214_Idx] === null) { x_1357214[x_1357214_Idx] = []; }
      var off = x_1357214[x_1357214_Idx].length;
      x_1357214[x_1357214_Idx].length += y_1357215.length;
      for (var i = 0; i < y_1357215.length; ++i) {
        x_1357214[x_1357214_Idx][off+i] = y_1357215.charCodeAt(i);
      }
    

  
}
function newSeq_1455128(len_1455131) {
  var result_1455133 = [];

    result_1455133 = new Array(len_1455131); for (var i=0;i<len_1455131;++i) {result_1455133[i]=null;}
  return result_1455133;

}
function unhandledException(e_1415059) {
    var buf_1415060 = [[]];
    if (!(((e_1415059.message).length == 0))) {
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_1415060[0].push.apply(buf_1415060[0], e_1415059.message);;
    }
    else {
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit(" ["));;
    add_1357211(buf_1415060, 0, e_1415059.name);
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("]\x0A"));;
    var cbuf_1420201 = toJSStr(buf_1415060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_1420201);
  }
  else {
    throw cbuf_1420201;
  }
  

  
}
function sysFatal_1305418(message_1305422) {
    raiseException({message: nimCopy(null, message_1305422, NTI1188013), m_type: NTI1194641, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}
function raiseAssert_1305414(msg_1305416) {
    sysFatal_1305418(msg_1305416);

  
}
function failedAssertImpl_1305480(msg_1305482) {
    raiseAssert_1305414(msg_1305482);

  
}
function rotl_2367430(x_2367432, k_2367433) {
  var result_2367434 = 0;

    result_2367434 = ((x_2367432 << k_2367433) | ((x_2367432 >>> 0) >>> ((64 - k_2367433) >>> 0)));

  return result_2367434;

}
function next_2367458(r_2367461) {
  var result_2367462 = 0;

    var s0_2367463 = r_2367461.a0;
    var s1_2367464 = r_2367461.a1;
    result_2367462 = ((s0_2367463 + s1_2367464) >>> 0);
    s1_2367464 = (s1_2367464 ^ s0_2367463);
    r_2367461.a0 = ((rotl_2367430(s0_2367463, 55) ^ s1_2367464) ^ (s1_2367464 << 14));
    r_2367461.a1 = rotl_2367430(s1_2367464, 36);

  return result_2367462;

}
function initRand_2390214(seed_2390216) {
  var result_2390217 = [({a0: 0, a1: 0})];

    if (!(!((seed_2390216 == 0)))) {
    failedAssertImpl_1305480(makeNimstrLit("random.nim(568, 12) `seed != 0` "));
    }
    
    result_2390217[0].a0 = Math.floor(seed_2390216 / Math.pow(2,16));
    result_2390217[0].a1 = (seed_2390216 & 65535);
    var _ = next_2367458(result_2390217[0]);

  return result_2390217[0];

}
function randomize_2405222(seed_2405224) {
    nimCopy(state_2367205[0], initRand_2390214(seed_2405224), NTI2367202);

  
}
function randomize_11641001() {
    var time_11641203 = ((epochTime_11640141() * 1.0000000000000000e+03) & 2147483647);
    randomize_2405222(time_11641203);

  
}
function raiseIndexError(i_1440047, a_1440048, b_1440049) {
    var Tmp1;

    if ((b_1440049 < a_1440048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_1440047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_1440048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_1440049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI1188013), parent: null, m_type: NTI1194649, name: null, trace: [], up: null}, "IndexDefect");

  
}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI1194637, name: null, trace: [], up: null}, "OverflowDefect");

  
}
function checkOverflowInt(a_1460403) {
        if (a_1460403 > 2147483647 || a_1460403 < -2147483648) raiseOverflow();
  

  
}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI1194653, name: null, trace: [], up: null}, "RangeDefect");

  
}
function rand_2370049(r_2370052, max_2370053) {
  var result_2370054 = 0;

  BeforeRet: do {
    if ((max_2370053 == 0)) {
    break BeforeRet;
    }
    
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          var x_2370055 = next_2367458(r_2370052);
          if ((x_2370055 <= ((4294967295 - (4294967295 % (max_2370053 >>> 0))) >>> 0))) {
          result_2370054 = chckRange((x_2370055 % ((max_2370053 + 1) )), -2147483648, 2147483647);
          break BeforeRet;
          }
          
        }
    } while(false);
  } while (false);

  return result_2370054;

}
function rand_11643165(r_11643168, x_11643170) {
  var result_11643171 = 0;

    result_11643171 = addInt(rand_2370049(r_11643168, chckRange(subInt(x_11643170.b, x_11643170.a), 0, 2147483647)), x_11643170.a);

  return result_11643171;

}
function rand_11643140(x_11643144) {
  var result_11643145 = 0;

    result_11643145 = rand_11643165(state_2367205[0], x_11643144);

  return result_11643145;

}
function HEX2EHEX2E_3480220(a_3480225, b_3480227) {
  var result_3480229 = ({a: 0, b: 0});

    nimCopy(result_3480229, {a: a_3480225, b: b_3480227}, NTI1901748);

  return result_3480229;

}
function shuffleBoard_11643068() {
    L1: do {
      var y_11643079 = 0;
      var res_11643536 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_11643536 <= 50)) break L3;
            y_11643079 = res_11643536;
            L4: do {
              var x_11643088 = 0;
              var res_11643531 = 1;
              L5: do {
                  L6: while (true) {
                  if (!(res_11643531 <= 15)) break L6;
                    x_11643088 = res_11643531;
                    board_11643038[0][chckIndx(y_11643079, 0, (board_11643038[0]).length-1)][chckIndx(x_11643088, 0, (board_11643038[0][chckIndx(y_11643079, 0, (board_11643038[0]).length-1)]).length-1)] = 1;
                    res_11643531 = addInt(res_11643531, 1);
                  }
              } while(false);
            } while(false);
            res_11643536 = addInt(res_11643536, 1);
          }
      } while(false);
    } while(false);
    L7: do {
      var y_11643098 = 0;
      var res_11643548 = 1;
      L8: do {
          L9: while (true) {
          if (!(res_11643548 <= 50)) break L9;
            y_11643098 = res_11643548;
            L10: do {
              var x_11643108 = 0;
              var res_11643543 = 1;
              L11: do {
                  L12: while (true) {
                  if (!(res_11643543 <= 50)) break L12;
                    x_11643108 = res_11643543;
                    var randomIndex_11643228 = rand_11643140(HEX2EHEX2E_3480220(1, 50));
                    var tmp_11643229 = board_11643038[0][chckIndx(y_11643098, 0, (board_11643038[0]).length-1)][chckIndx(x_11643108, 0, (board_11643038[0][chckIndx(y_11643098, 0, (board_11643038[0]).length-1)]).length-1)];
                    board_11643038[0][chckIndx(y_11643098, 0, (board_11643038[0]).length-1)][chckIndx(x_11643108, 0, (board_11643038[0][chckIndx(y_11643098, 0, (board_11643038[0]).length-1)]).length-1)] = board_11643038[0][chckIndx(y_11643098, 0, (board_11643038[0]).length-1)][chckIndx(randomIndex_11643228, 0, (board_11643038[0][chckIndx(y_11643098, 0, (board_11643038[0]).length-1)]).length-1)];
                    board_11643038[0][chckIndx(y_11643098, 0, (board_11643038[0]).length-1)][chckIndx(randomIndex_11643228, 0, (board_11643038[0][chckIndx(y_11643098, 0, (board_11643038[0]).length-1)]).length-1)] = tmp_11643229;
                    res_11643543 = addInt(res_11643543, 1);
                  }
              } while(false);
            } while(false);
            res_11643548 = addInt(res_11643548, 1);
          }
      } while(false);
    } while(false);

  
}
function outputBoard_11643332(ctx_11643334) {
    L1: do {
      var y_11643344 = 0;
      var res_11643580 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_11643580 <= 50)) break L3;
            y_11643344 = res_11643580;
            L4: do {
              var x_11643354 = 0;
              var res_11643575 = 1;
              L5: do {
                  L6: while (true) {
                  if (!(res_11643575 <= 50)) break L6;
                    x_11643354 = res_11643575;
                    if ((board_11643038[0][chckIndx(y_11643344, 0, (board_11643038[0]).length-1)][chckIndx(x_11643354, 0, (board_11643038[0][chckIndx(y_11643344, 0, (board_11643038[0]).length-1)]).length-1)] == 1)) {
                    ctx_11643334.fillStyle = "#11d319";
                    ctx_11643334.fillRect(mulInt(5, subInt(x_11643354, 1)), mulInt(5, subInt(y_11643344, 1)), 5, 5);
                    }
                    else {
                      ctx_11643334.fillStyle = "black";
                      ctx_11643334.fillRect(mulInt(5, subInt(x_11643354, 1)), mulInt(5, subInt(y_11643344, 1)), 5, 5);
                    }
                    
                    res_11643575 = addInt(res_11643575, 1);
                  }
              } while(false);
            } while(false);
            res_11643580 = addInt(res_11643580, 1);
          }
      } while(false);
    } while(false);

  
}
function countNeighbors_11643258(y_11643260, x_11643261) {
    var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;
    var Tmp5;
    var Tmp6;

  var result_11643262 = 0;

    result_11643262 = addInt(addInt(addInt(addInt(addInt(addInt(addInt((Tmp1 = board_11643038[0][chckIndx(subInt(y_11643260, 1), 0, (board_11643038[0]).length-1)], Tmp1)[chckIndx(subInt(x_11643261, 1), 0, (Tmp1).length-1)], (Tmp2 = board_11643038[0][chckIndx(subInt(y_11643260, 1), 0, (board_11643038[0]).length-1)], Tmp2)[chckIndx(x_11643261, 0, (Tmp2).length-1)]), (Tmp3 = board_11643038[0][chckIndx(subInt(y_11643260, 1), 0, (board_11643038[0]).length-1)], Tmp3)[chckIndx(addInt(x_11643261, 1), 0, (Tmp3).length-1)]), board_11643038[0][chckIndx(y_11643260, 0, (board_11643038[0]).length-1)][chckIndx(subInt(x_11643261, 1), 0, (board_11643038[0][chckIndx(y_11643260, 0, (board_11643038[0]).length-1)]).length-1)]), board_11643038[0][chckIndx(y_11643260, 0, (board_11643038[0]).length-1)][chckIndx(addInt(x_11643261, 1), 0, (board_11643038[0][chckIndx(y_11643260, 0, (board_11643038[0]).length-1)]).length-1)]), (Tmp4 = board_11643038[0][chckIndx(addInt(y_11643260, 1), 0, (board_11643038[0]).length-1)], Tmp4)[chckIndx(subInt(x_11643261, 1), 0, (Tmp4).length-1)]), (Tmp5 = board_11643038[0][chckIndx(addInt(y_11643260, 1), 0, (board_11643038[0]).length-1)], Tmp5)[chckIndx(x_11643261, 0, (Tmp5).length-1)]), (Tmp6 = board_11643038[0][chckIndx(addInt(y_11643260, 1), 0, (board_11643038[0]).length-1)], Tmp6)[chckIndx(addInt(x_11643261, 1), 0, (Tmp6).length-1)]);

  return result_11643262;

}
function nextGeneration_11643276() {
    var neighbors_11643278 = arrayConstr(52, new Int8Array(52), NTI11643031);
    L1: do {
      var y_11643288 = 0;
      var res_11643592 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_11643592 <= 50)) break L3;
            y_11643288 = res_11643592;
            L4: do {
              var x_11643298 = 0;
              var res_11643587 = 1;
              L5: do {
                  L6: while (true) {
                  if (!(res_11643587 <= 50)) break L6;
                    x_11643298 = res_11643587;
                    neighbors_11643278[chckIndx(y_11643288, 0, (neighbors_11643278).length-1)][chckIndx(x_11643298, 0, (neighbors_11643278[chckIndx(y_11643288, 0, (neighbors_11643278).length-1)]).length-1)] = countNeighbors_11643258(y_11643288, x_11643298);
                    res_11643587 = addInt(res_11643587, 1);
                  }
              } while(false);
            } while(false);
            res_11643592 = addInt(res_11643592, 1);
          }
      } while(false);
    } while(false);
    L7: do {
      var y_11643308 = 0;
      var res_11643604 = 1;
      L8: do {
          L9: while (true) {
          if (!(res_11643604 <= 50)) break L9;
            y_11643308 = res_11643604;
            L10: do {
              var x_11643318 = 0;
              var res_11643599 = 1;
              L11: do {
                  L12: while (true) {
                  if (!(res_11643599 <= 50)) break L12;
                    x_11643318 = res_11643599;
                    switch (neighbors_11643278[chckIndx(y_11643308, 0, (neighbors_11643278).length-1)][chckIndx(x_11643318, 0, (neighbors_11643278[chckIndx(y_11643308, 0, (neighbors_11643278).length-1)]).length-1)]) {
                    case 2:
                      break;
                    case 3:
                      board_11643038[0][chckIndx(y_11643308, 0, (board_11643038[0]).length-1)][chckIndx(x_11643318, 0, (board_11643038[0][chckIndx(y_11643308, 0, (board_11643038[0]).length-1)]).length-1)] = 1;
                      break;
                    default: 
                      board_11643038[0][chckIndx(y_11643308, 0, (board_11643038[0]).length-1)][chckIndx(x_11643318, 0, (board_11643038[0][chckIndx(y_11643308, 0, (board_11643038[0]).length-1)]).length-1)] = 0;
                      break;
                    }
                    res_11643599 = addInt(res_11643599, 1);
                  }
              } while(false);
            } while(false);
            res_11643604 = addInt(res_11643604, 1);
          }
      } while(false);
    } while(false);

  
}
function main_11643368(event_11643370) {
function mainloop_11643373(ctx_11643375) {
    nextGeneration_11643276();
    outputBoard_11643332(ctx_11643375);

  
}
    function update_11643389(timestamp_11643391) {
      BeforeRet: do {
        var elapsed_11643393 = ((timestamp_11643391 - prevTimestamp_11643039[0]) / 1.0000000000000000e+03);
        if ((elapsed_11643393 <= 6.6666666666666666e-02)) {
        var _ = window.requestAnimationFrame(update_11643389);
        break BeforeRet;
        }
        
        prevTimestamp_11643039[0] = timestamp_11643391;
        outputBoard_11643332(ctx_11643372);
        mainloop_11643373(ctx_11643372);
        var _ = window.requestAnimationFrame(update_11643389);
      } while (false);

      
    }

    var canvas_11643371 = document.getElementById("canvas");
    canvas_11643371.width = 250;
    canvas_11643371.height = 250;
    var ctx_11643372 = canvas_11643371.getContext("2d");
    randomize_11641001();
    shuffleBoard_11643068();
    update_11643389(0.0);

  
}
window.onload = main_11643368;
